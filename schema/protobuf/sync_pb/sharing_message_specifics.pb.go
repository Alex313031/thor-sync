// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sharing_message_specifics.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This enum is used in histograms. Entries should not be renumbered and
// numeric values should never be reused. Also remember to update in
// tools/metrics/histograms/enums.xml SyncSharingMessageCommitErrorCode enum.
type SharingMessageCommitError_ErrorCode int32

const (
	SharingMessageCommitError_NONE               SharingMessageCommitError_ErrorCode = 0
	SharingMessageCommitError_INVALID_ARGUMENT   SharingMessageCommitError_ErrorCode = 1
	SharingMessageCommitError_NOT_FOUND          SharingMessageCommitError_ErrorCode = 2
	SharingMessageCommitError_INTERNAL           SharingMessageCommitError_ErrorCode = 3
	SharingMessageCommitError_UNAVAILABLE        SharingMessageCommitError_ErrorCode = 4
	SharingMessageCommitError_RESOURCE_EXHAUSTED SharingMessageCommitError_ErrorCode = 5
	SharingMessageCommitError_UNAUTHENTICATED    SharingMessageCommitError_ErrorCode = 6
	SharingMessageCommitError_PERMISSION_DENIED  SharingMessageCommitError_ErrorCode = 7
	// Client-specific error codes.
	SharingMessageCommitError_SYNC_TURNED_OFF    SharingMessageCommitError_ErrorCode = 8
	SharingMessageCommitError_SYNC_NETWORK_ERROR SharingMessageCommitError_ErrorCode = 9
	// Error code for server error or unparsable server response.
	SharingMessageCommitError_SYNC_SERVER_ERROR SharingMessageCommitError_ErrorCode = 10
)

var SharingMessageCommitError_ErrorCode_name = map[int32]string{
	0:  "NONE",
	1:  "INVALID_ARGUMENT",
	2:  "NOT_FOUND",
	3:  "INTERNAL",
	4:  "UNAVAILABLE",
	5:  "RESOURCE_EXHAUSTED",
	6:  "UNAUTHENTICATED",
	7:  "PERMISSION_DENIED",
	8:  "SYNC_TURNED_OFF",
	9:  "SYNC_NETWORK_ERROR",
	10: "SYNC_SERVER_ERROR",
}

var SharingMessageCommitError_ErrorCode_value = map[string]int32{
	"NONE":               0,
	"INVALID_ARGUMENT":   1,
	"NOT_FOUND":          2,
	"INTERNAL":           3,
	"UNAVAILABLE":        4,
	"RESOURCE_EXHAUSTED": 5,
	"UNAUTHENTICATED":    6,
	"PERMISSION_DENIED":  7,
	"SYNC_TURNED_OFF":    8,
	"SYNC_NETWORK_ERROR": 9,
	"SYNC_SERVER_ERROR":  10,
}

func (x SharingMessageCommitError_ErrorCode) Enum() *SharingMessageCommitError_ErrorCode {
	p := new(SharingMessageCommitError_ErrorCode)
	*p = x
	return p
}

func (x SharingMessageCommitError_ErrorCode) String() string {
	return proto.EnumName(SharingMessageCommitError_ErrorCode_name, int32(x))
}

func (x *SharingMessageCommitError_ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SharingMessageCommitError_ErrorCode_value, data, "SharingMessageCommitError_ErrorCode")
	if err != nil {
		return err
	}
	*x = SharingMessageCommitError_ErrorCode(value)
	return nil
}

func (SharingMessageCommitError_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_490056852b5b1e8d, []int{1, 0}
}

type SharingMessageSpecifics struct {
	// Unique identifier of message.
	MessageId            *string                                       `protobuf:"bytes,1,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	ChannelConfiguration *SharingMessageSpecifics_ChannelConfiguration `protobuf:"bytes,2,opt,name=channel_configuration,json=channelConfiguration" json:"channel_configuration,omitempty"`
	// Payload encrypted using the target user keys according to WebPush
	// encryption scheme. The payload has to be a valid
	// chrome/browser/sharing/proto/sharing_message.proto serialized using
	// SerializeToString.
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SharingMessageSpecifics) Reset()         { *m = SharingMessageSpecifics{} }
func (m *SharingMessageSpecifics) String() string { return proto.CompactTextString(m) }
func (*SharingMessageSpecifics) ProtoMessage()    {}
func (*SharingMessageSpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_490056852b5b1e8d, []int{0}
}

func (m *SharingMessageSpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharingMessageSpecifics.Unmarshal(m, b)
}
func (m *SharingMessageSpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharingMessageSpecifics.Marshal(b, m, deterministic)
}
func (m *SharingMessageSpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharingMessageSpecifics.Merge(m, src)
}
func (m *SharingMessageSpecifics) XXX_Size() int {
	return xxx_messageInfo_SharingMessageSpecifics.Size(m)
}
func (m *SharingMessageSpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_SharingMessageSpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_SharingMessageSpecifics proto.InternalMessageInfo

func (m *SharingMessageSpecifics) GetMessageId() string {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return ""
}

func (m *SharingMessageSpecifics) GetChannelConfiguration() *SharingMessageSpecifics_ChannelConfiguration {
	if m != nil {
		return m.ChannelConfiguration
	}
	return nil
}

func (m *SharingMessageSpecifics) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type SharingMessageSpecifics_ChannelConfiguration struct {
	// Types that are valid to be assigned to ChannelConfiguration:
	//	*SharingMessageSpecifics_ChannelConfiguration_Fcm
	//	*SharingMessageSpecifics_ChannelConfiguration_Server
	ChannelConfiguration isSharingMessageSpecifics_ChannelConfiguration_ChannelConfiguration `protobuf_oneof:"channel_configuration"`
	XXX_NoUnkeyedLiteral struct{}                                                            `json:"-"`
	XXX_unrecognized     []byte                                                              `json:"-"`
	XXX_sizecache        int32                                                               `json:"-"`
}

func (m *SharingMessageSpecifics_ChannelConfiguration) Reset() {
	*m = SharingMessageSpecifics_ChannelConfiguration{}
}
func (m *SharingMessageSpecifics_ChannelConfiguration) String() string {
	return proto.CompactTextString(m)
}
func (*SharingMessageSpecifics_ChannelConfiguration) ProtoMessage() {}
func (*SharingMessageSpecifics_ChannelConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_490056852b5b1e8d, []int{0, 0}
}

func (m *SharingMessageSpecifics_ChannelConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration.Unmarshal(m, b)
}
func (m *SharingMessageSpecifics_ChannelConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration.Marshal(b, m, deterministic)
}
func (m *SharingMessageSpecifics_ChannelConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration.Merge(m, src)
}
func (m *SharingMessageSpecifics_ChannelConfiguration) XXX_Size() int {
	return xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration.Size(m)
}
func (m *SharingMessageSpecifics_ChannelConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration proto.InternalMessageInfo

type isSharingMessageSpecifics_ChannelConfiguration_ChannelConfiguration interface {
	isSharingMessageSpecifics_ChannelConfiguration_ChannelConfiguration()
}

type SharingMessageSpecifics_ChannelConfiguration_Fcm struct {
	Fcm *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration `protobuf:"bytes,1,opt,name=fcm,oneof"`
}

type SharingMessageSpecifics_ChannelConfiguration_Server struct {
	Server []byte `protobuf:"bytes,2,opt,name=server,oneof"`
}

func (*SharingMessageSpecifics_ChannelConfiguration_Fcm) isSharingMessageSpecifics_ChannelConfiguration_ChannelConfiguration() {
}

func (*SharingMessageSpecifics_ChannelConfiguration_Server) isSharingMessageSpecifics_ChannelConfiguration_ChannelConfiguration() {
}

func (m *SharingMessageSpecifics_ChannelConfiguration) GetChannelConfiguration() isSharingMessageSpecifics_ChannelConfiguration_ChannelConfiguration {
	if m != nil {
		return m.ChannelConfiguration
	}
	return nil
}

func (m *SharingMessageSpecifics_ChannelConfiguration) GetFcm() *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration {
	if x, ok := m.GetChannelConfiguration().(*SharingMessageSpecifics_ChannelConfiguration_Fcm); ok {
		return x.Fcm
	}
	return nil
}

func (m *SharingMessageSpecifics_ChannelConfiguration) GetServer() []byte {
	if x, ok := m.GetChannelConfiguration().(*SharingMessageSpecifics_ChannelConfiguration_Server); ok {
		return x.Server
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SharingMessageSpecifics_ChannelConfiguration) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SharingMessageSpecifics_ChannelConfiguration_Fcm)(nil),
		(*SharingMessageSpecifics_ChannelConfiguration_Server)(nil),
	}
}

type SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration struct {
	// FCM registration token of target device.
	Token *string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	// Time to live for a FCM message (in seconds) - if specified, the message
	// will expire based on the TTL.
	Ttl *int32 `protobuf:"varint,2,opt,name=ttl" json:"ttl,omitempty"`
	// Priority level of a FCM message. 5 = normal, 10 = high.
	Priority             *int32   `protobuf:"varint,3,opt,name=priority" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) Reset() {
	*m = SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration{}
}
func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) String() string {
	return proto.CompactTextString(m)
}
func (*SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) ProtoMessage() {}
func (*SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_490056852b5b1e8d, []int{0, 0, 0}
}

func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration.Unmarshal(m, b)
}
func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration.Marshal(b, m, deterministic)
}
func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration.Merge(m, src)
}
func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) XXX_Size() int {
	return xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration.Size(m)
}
func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration proto.InternalMessageInfo

func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) GetTtl() int32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func (m *SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

// Used for the server to return fine grained commit errors back to the client.
type SharingMessageCommitError struct {
	ErrorCode            *SharingMessageCommitError_ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,enum=sync_pb.SharingMessageCommitError_ErrorCode" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *SharingMessageCommitError) Reset()         { *m = SharingMessageCommitError{} }
func (m *SharingMessageCommitError) String() string { return proto.CompactTextString(m) }
func (*SharingMessageCommitError) ProtoMessage()    {}
func (*SharingMessageCommitError) Descriptor() ([]byte, []int) {
	return fileDescriptor_490056852b5b1e8d, []int{1}
}

func (m *SharingMessageCommitError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SharingMessageCommitError.Unmarshal(m, b)
}
func (m *SharingMessageCommitError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SharingMessageCommitError.Marshal(b, m, deterministic)
}
func (m *SharingMessageCommitError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SharingMessageCommitError.Merge(m, src)
}
func (m *SharingMessageCommitError) XXX_Size() int {
	return xxx_messageInfo_SharingMessageCommitError.Size(m)
}
func (m *SharingMessageCommitError) XXX_DiscardUnknown() {
	xxx_messageInfo_SharingMessageCommitError.DiscardUnknown(m)
}

var xxx_messageInfo_SharingMessageCommitError proto.InternalMessageInfo

func (m *SharingMessageCommitError) GetErrorCode() SharingMessageCommitError_ErrorCode {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return SharingMessageCommitError_NONE
}

func init() {
	proto.RegisterEnum("sync_pb.SharingMessageCommitError_ErrorCode", SharingMessageCommitError_ErrorCode_name, SharingMessageCommitError_ErrorCode_value)
	proto.RegisterType((*SharingMessageSpecifics)(nil), "sync_pb.SharingMessageSpecifics")
	proto.RegisterType((*SharingMessageSpecifics_ChannelConfiguration)(nil), "sync_pb.SharingMessageSpecifics.ChannelConfiguration")
	proto.RegisterType((*SharingMessageSpecifics_ChannelConfiguration_FCMChannelConfiguration)(nil), "sync_pb.SharingMessageSpecifics.ChannelConfiguration.FCMChannelConfiguration")
	proto.RegisterType((*SharingMessageCommitError)(nil), "sync_pb.SharingMessageCommitError")
}

func init() {
	proto.RegisterFile("sharing_message_specifics.proto", fileDescriptor_490056852b5b1e8d)
}

var fileDescriptor_490056852b5b1e8d = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xd1, 0x8a, 0xda, 0x40,
	0x14, 0xdd, 0x98, 0x75, 0xd7, 0xdc, 0xb5, 0xdd, 0x74, 0xea, 0x56, 0x2b, 0x94, 0x8a, 0x50, 0x10,
	0x5a, 0xf2, 0x20, 0xf4, 0x03, 0x62, 0x32, 0xd6, 0xb0, 0x3a, 0x59, 0x26, 0x89, 0x6d, 0x1f, 0xca,
	0x90, 0xc6, 0x51, 0xd3, 0x9a, 0x4c, 0x98, 0x64, 0x0b, 0x7e, 0x43, 0x7f, 0x6d, 0x7f, 0xa2, 0x7f,
	0x52, 0x12, 0x75, 0xd9, 0x82, 0xbe, 0xf4, 0x25, 0xdc, 0x73, 0x72, 0xce, 0x99, 0xb9, 0x07, 0x06,
	0xde, 0xe6, 0xeb, 0x50, 0xc6, 0xe9, 0x8a, 0x25, 0x3c, 0xcf, 0xc3, 0x15, 0x67, 0x79, 0xc6, 0xa3,
	0x78, 0x19, 0x47, 0xb9, 0x91, 0x49, 0x51, 0x08, 0x74, 0x99, 0x6f, 0xd3, 0x88, 0x65, 0xdf, 0xfb,
	0x0f, 0x2a, 0xb4, 0xbd, 0x9d, 0x78, 0xb6, 0xd3, 0x7a, 0x07, 0x29, 0x7a, 0x03, 0x70, 0xf0, 0xc7,
	0x8b, 0x8e, 0xd2, 0x53, 0x06, 0x1a, 0xd5, 0xf6, 0x8c, 0xb3, 0x40, 0x3f, 0xe0, 0x26, 0x5a, 0x87,
	0x69, 0xca, 0x37, 0x2c, 0x12, 0xe9, 0x32, 0x5e, 0xdd, 0xcb, 0xb0, 0x88, 0x45, 0xda, 0xa9, 0xf5,
	0x94, 0xc1, 0xd5, 0xf0, 0xa3, 0xb1, 0x3f, 0xc3, 0x38, 0x91, 0x6f, 0x58, 0x3b, 0xb7, 0xf5, 0xd4,
	0x4c, 0x5b, 0xd1, 0x11, 0x16, 0x75, 0xe0, 0x32, 0x0b, 0xb7, 0x1b, 0x11, 0x2e, 0x3a, 0x6a, 0x4f,
	0x19, 0x34, 0xe9, 0x01, 0x76, 0x7f, 0xd7, 0xa0, 0x75, 0x2c, 0x08, 0x85, 0xa0, 0x2e, 0xa3, 0xa4,
	0xba, 0xf6, 0xd5, 0x70, 0xf6, 0x5f, 0x97, 0x31, 0xc6, 0xd6, 0xec, 0x18, 0x3f, 0x39, 0xa3, 0x65,
	0x36, 0xea, 0xc0, 0x45, 0xce, 0xe5, 0x2f, 0x2e, 0xab, 0x95, 0x9b, 0x93, 0x33, 0xba, 0xc7, 0xdd,
	0x6f, 0xd0, 0x3e, 0xe1, 0x45, 0x2d, 0xa8, 0x17, 0xe2, 0x27, 0x4f, 0xf7, 0x85, 0xee, 0x00, 0xd2,
	0x41, 0x2d, 0x8a, 0x4d, 0x95, 0x53, 0xa7, 0xe5, 0x88, 0xba, 0xd0, 0xc8, 0x64, 0x2c, 0x64, 0x5c,
	0x6c, 0xab, 0x9d, 0xeb, 0xf4, 0x11, 0x8f, 0xda, 0x27, 0xaa, 0xef, 0x3f, 0xd4, 0xe0, 0xf5, 0xbf,
	0x1b, 0x5a, 0x22, 0x49, 0xe2, 0x02, 0x4b, 0x29, 0x24, 0xba, 0x05, 0xe0, 0xe5, 0xc0, 0x22, 0xb1,
	0xe0, 0xd5, 0xf9, 0xcf, 0x87, 0x1f, 0x4e, 0x34, 0xf3, 0xc4, 0x67, 0x54, 0x5f, 0x4b, 0x2c, 0x38,
	0xd5, 0xf8, 0x61, 0xec, 0xff, 0x51, 0x40, 0x7b, 0xfc, 0x81, 0x1a, 0x70, 0x4e, 0x5c, 0x82, 0xf5,
	0x33, 0xd4, 0x02, 0xdd, 0x21, 0x73, 0x73, 0xea, 0xd8, 0xcc, 0xa4, 0x9f, 0x82, 0x19, 0x26, 0xbe,
	0xae, 0xa0, 0x67, 0xa0, 0x11, 0xd7, 0x67, 0x63, 0x37, 0x20, 0xb6, 0x5e, 0x43, 0x4d, 0x68, 0x38,
	0xc4, 0xc7, 0x94, 0x98, 0x53, 0x5d, 0x45, 0xd7, 0x70, 0x15, 0x10, 0x73, 0x6e, 0x3a, 0x53, 0x73,
	0x34, 0xc5, 0xfa, 0x39, 0x7a, 0x05, 0x88, 0x62, 0xcf, 0x0d, 0xa8, 0x85, 0x19, 0xfe, 0x32, 0x31,
	0x03, 0xcf, 0xc7, 0xb6, 0x5e, 0x47, 0x2f, 0xe1, 0x3a, 0x20, 0x66, 0xe0, 0x4f, 0x30, 0xf1, 0x1d,
	0xcb, 0x2c, 0xc9, 0x0b, 0x74, 0x03, 0x2f, 0xee, 0x30, 0x9d, 0x39, 0x9e, 0xe7, 0xb8, 0x84, 0xd9,
	0x98, 0x38, 0xd8, 0xd6, 0x2f, 0x4b, 0xad, 0xf7, 0x95, 0x58, 0xcc, 0x0f, 0x28, 0xc1, 0x36, 0x73,
	0xc7, 0x63, 0xbd, 0x51, 0x06, 0x57, 0x24, 0xc1, 0xfe, 0x67, 0x97, 0xde, 0x32, 0x4c, 0xa9, 0x4b,
	0x75, 0xad, 0xcc, 0xa8, 0x78, 0x0f, 0xd3, 0x39, 0xa6, 0x7b, 0x1a, 0x46, 0xef, 0xe1, 0x9d, 0x90,
	0x2b, 0x23, 0x5a, 0x4b, 0x91, 0xc4, 0xf7, 0x89, 0x11, 0x89, 0x24, 0x13, 0x29, 0x4f, 0x8b, 0xbc,
	0x6a, 0x6d, 0xf7, 0x98, 0x22, 0xb1, 0x99, 0xa8, 0x77, 0xca, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x94, 0x8c, 0x92, 0xa0, 0x75, 0x03, 0x00, 0x00,
}
